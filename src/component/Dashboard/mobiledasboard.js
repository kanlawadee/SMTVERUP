import React, { useState } from 'react';
import '../Dashboard/mobile.css';
import dayjs from 'dayjs';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import TextField from '@mui/material/TextField'; // Import TextField from MUI

function Mobiledasboard() {
  const [orders, setOrders] = useState([
    { id: 70443, date: '20/2/2567', customer: '‡∏™‡∏°‡∏ô‡∏∂‡∏Å ‡πÉ‡∏à‡∏î‡∏µ', status: '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞', color: 'orange' },
    { id: 39235, date: '26/2/2567', customer: '‡∏™‡∏°‡∏´‡∏°‡∏≤‡∏¢ ‡πÉ‡∏à‡πÄ‡∏¢‡πá‡∏ô', status: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞', color: 'red' },
    { id: 13671, date: '10/2/2567', customer: '‡∏™‡∏°‡∏ö‡∏≠‡∏¢ ‡∏î‡∏ß‡∏á‡πÅ‡∏Ç', status: '‡∏ä‡∏≥‡∏£‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', color: 'green' },
  ]);

  const [searchTerm, setSearchTerm] = useState('');
  const [startDate, setStartDate] = useState(null); // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  const [endDate, setEndDate] = useState(null); // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î

  const filteredOrders = orders.filter(order =>
    order.customer.includes(searchTerm) ||
    order.id.toString().includes(searchTerm) ||
    (startDate && dayjs(order.date, 'D/M/YYYY').isSame(startDate, 'day')) ||
    (endDate && dayjs(order.date, 'D/M/YYYY').isSame(endDate, 'day'))
  );

  return (
    <div className="order-container">
      <header className="header">
        <h2>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á</h2>
        <button className="add-btn">‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
      </header>

      <div className="search-container">
  <input
    type="text"
    placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á"
    value={searchTerm}
    onChange={(e) => setSearchTerm(e.target.value)}
  />

  {/* ‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á DatePicker ‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô */}
  <div className="datepickers-container">
    <LocalizationProvider dateAdapter={AdapterDayjs}>
      <DatePicker
        label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô"
        value={startDate}
        onChange={(newValue) => setStartDate(newValue)}
        renderInput={(params) => (
          <TextField 
            {...params} 
            fullWidth 
            sx={{ marginTop: '10px' }} 
          />
        )}
      />
    </LocalizationProvider>

    <LocalizationProvider dateAdapter={AdapterDayjs}>
      <DatePicker
        label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î"
        value={endDate}
        onChange={(newValue) => setEndDate(newValue)}
        renderInput={(params) => (
          <TextField 
            {...params} 
            fullWidth 
            sx={{ marginTop: '10px' }} 
          />
        )}
      />
    </LocalizationProvider>
  </div>
</div>

      <div className="order-list">
        {filteredOrders.map((order) => (
          <div className="order-card" key={order.id}>
            <div className="order-header">
              <span>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á: {order.id}</span>
              <span>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á: {order.date}</span>
            </div>
            <div className="order-customer">‡∏ú‡∏π‡πâ‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà: {order.customer}</div>
            <div className="order-status">
              <span style={{ color: order.color }}>{order.status}</span>
              <button className="edit-btn">‚úèÔ∏è</button>
              <button className="delete-btn">üóëÔ∏è</button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default Mobiledasboard;
